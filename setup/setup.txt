Part of the learning experience is learning how to configure a "LAMP" stack. 
Linux, Apache2, Mysql, PHP. This is still the most common stack for a website. 

//Configure your Linux server: 
-Connect to a fresh debian ec2. Ensure that its security group has no restrictions on inbound or outbound traffic. 
-Update the server after connecting: 
sudo apt update
sudo apt upgrade -y

//Transfer and execute setup_ftp.sh to setup the FTP portion. This will allow us to easily upload our web files.  
sudo chmod +x setup_ftp.sh
sudo bash setup_ftp.sh

Follow instructions when prompted. 
Connect to FTP as banana_user, and upload webfiles into the default ftp home for banana_user. 

//Apache2: 
sudo apt install apache2
sudo service apache2 start
sudo service apache2 status

//Visit your web servers public IP in your browser. This will verify that the EC2 security group was configured correctly. 

-Stop Apache2 before installing PHP. 
sudo service apache2 stop

//Install Php: 
-Install dependancies 
sudo apt install php libapache2-mod-php php-mysql gnupg dnsutils whois php-curl 

//Restart Apache
sudo service apache2 start 

-Verify Apache2 is running 
sudo service apache2 status

-Visit YOURIPHERE/test.php to verify that PHP was configured correctly.   


//Add MySQL to Repository: 
-Note: In the below lines, I am using the latest MySQL version as of writing. 
-It is important for you to manually verify that this is still the latest version. 
-https://dev.mysql.com/downloads/repo/apt/

cd /tmp
wget https://dev.mysql.com/get/mysql-apt-config_0.8.25-1_all.deb   
sudo dpkg -i mysql-apt-config_0.8.25-1_all.deb

-Select "OK" when installing (Use your arrow keys) 


//Install MySQL 
-Set the root user password to backpack10 when prompted

sudo apt update
sudo apt install mysql-server



//Setup your database

-Connect to the MySQL Command Line Interface
sudo mysql -u root -p 


-Create your database and tables

CREATE database users;
show databases;
use users; 

-We will be using whole numbers for our points column, and will be using math with this column. 
-If we are using math on a column, we cannot leave it as VARCHAR(255) 

CREATE TABLE security (
  username VARCHAR(255),
  password VARCHAR(255),
  points int DEFAULT 0
);

INSERT INTO security (username, password, points) VALUES ('admin', 'abc123', '100');


CREATE TABLE submissions (
  flag VARCHAR(255) NOT NULL,
  username VARCHAR(255) NOT NULL,
  timestamp DATETIME NOT NULL,
  PRIMARY KEY (flag, username)
);



-Verify the test insert
select * from security; 
flush privileges; 

//Your LAMP stack is finished. 

-----Part two: Configure the challenges----- 
  
-On your Debian EC2 server, switch to the banana_user account 
-The password is banana123

su banana_user
cd ~

-You should see the files inside banana_user's home directory 
ls -al
cd WebFiles

-Move web files to /var/www/html/ and give the www-data permission over them

sudo rm /var/www/html/index.html
sudo mv * /var/www/html/
cd /var/www/html/
sudo chown -R www-data:www-data /var/www

-Configure some of the challenges
chmod 644 /home/banana_user/.ssh/id_rsa
chmod 777 /var/www/html/tasks/image2shell/uploads/

CanYouHack.Me is now properly configured. 
